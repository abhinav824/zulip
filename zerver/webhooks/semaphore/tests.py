# -*- coding: utf-8 -*-
from zerver.lib.test_classes import WebhookTestCase


class SemaphoreHookTests(WebhookTestCase):
    STREAM_NAME = 'semaphore'
    URL_TEMPLATE = "/api/v1/external/semaphore?stream={stream}&api_key={api_key}"

    # Messages are generated by Semaphore on git push. The subject lines below
    # contain information on the repo and branch, and the message has links and
    # details about the build, deploy, server, author, and commit

    # Tests for Semaphore Classic
    def test_semaphore_build(self) -> None:
        expected_topic = u"knighthood/master"  # repo/branch
        expected_message = """
[Build 314](https://semaphoreci.com/donquixote/knighthood/branches/master/builds/314) passed:
* **Commit**: [a490b8d: Create user account for Rocinante](https://github.com/donquixote/knighthood/commit/a490b8d508ebbdab1d77a5c2aefa35ceb2d62daf)
* **Author**: don@lamancha.com
""".strip()
        self.send_and_test_stream_message('build', expected_topic, expected_message,
                                          content_type="application/x-www-form-urlencoded")

    def test_semaphore_deploy(self) -> None:
        expected_topic = u"knighthood/master"
        expected_message = """
[Deploy 17](https://semaphoreci.com/donquixote/knighthood/servers/lamancha-271/deploys/17) of [build 314](https://semaphoreci.com/donquixote/knighthood/branches/master/builds/314) passed:
* **Commit**: [a490b8d: Create user account for Rocinante](https://github.com/donquixote/knighthood/commit/a490b8d508ebbdab1d77a5c2aefa35ceb2d62daf)
* **Author**: don@lamancha.com
* **Server**: lamancha-271
""".strip()
        self.send_and_test_stream_message('deploy', expected_topic, expected_message,
                                          content_type="application/x-www-form-urlencoded")

    # Tests For Semaphore 2.0
    def test_semaphore2_push_known_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"  # repo/branch
        expected_message = """
**[radwo](https://github.com/radwo)** pushed to branch **rw/webhook_impl** of [semaphore/notifications](https://github.com/renderedtext/notifications):
* **Commit**: [(#2d9f5fc) empty](https://github.com/renderedtext/notifications/commit/2d9f5fcec1ca7c68fa7bd44dd58ec4ff65814563)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
  1. **List & Test & Build 2**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('push', expected_topic, expected_message,
                                          content_type="application/json")

    def test_semaphore2_push_unknown_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"  # repo/branch
        expected_message = """
**[radwo](https://enterprise.github.com/renderedtext/notifications)** pushed to branch **rw/webhook_impl** of [semaphore/notifications](https://enterprise.github.com/renderedtext/notifications):
* **Commit**: [(#2d9f5fc) empty](https://enterprise.github.com/renderedtext/notifications)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('push_unknown_host', expected_topic, expected_message,
                                          content_type="application/json")

    def test_semaphore_pull_request_known_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"
        expected_message = """
**[radwo](https://github.com/radwo)** created a pull request to branch **rw/webhook_impl** of [semaphore/notifications](https://github.com/renderedtext/notifications):
* **Pull Request**: [Add docs for webhook notifications](https://github.com/renderedtext/notifications/pull/2)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('pull_request', expected_topic, expected_message,
                                          content_type="application/json")

    def test_semaphore_pull_request_unkown_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"
        expected_message = """
**[radwo](https://enterprise.github.com/renderedtext/notifications)** created a pull request to branch **rw/webhook_impl** of [semaphore/notifications](https://enterprise.github.com/renderedtext/notifications):
* **Pull Request**: [Add docs for webhook notifications](https://enterprise.github.com/renderedtext/notifications)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('pull_request_unknown_host', expected_topic, expected_message,
                                          content_type="application/json")

    def test_semaphore_tag_known_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"
        expected_message = """
**[radwo](https://github.com/radwo)** pushed a tag to [semaphore/notifications](https://github.com/renderedtext/notifications):
* **Tag**: [v1.0.1](https://github.com/renderedtext/notifications/releases/tag/v1.0.1)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('tag', expected_topic, expected_message,
                                          content_type="application/json")

    def test_semaphore_tag_unknown_host(self) -> None:
        expected_topic = u"notifications/rw/webhook_impl"
        expected_message = """
**[radwo](https://enterprise.github.com/renderedtext/notifications)** pushed a tag to [semaphore/notifications](https://enterprise.github.com/renderedtext/notifications):
* **Tag**: [v1.0.1](https://enterprise.github.com/renderedtext/notifications)
* **Pipeline**:
  - Name: Notifications
  - Result: stopped
* **Blocks**:
  1. **List & Test & Build**:
    - Result: stopped
""".strip()
        self.send_and_test_stream_message('tag_unknown_host', expected_topic, expected_message,
                                          content_type="application/json")

    def get_body(self, fixture_name: str) -> str:
        return self.webhook_fixture_data("semaphore", fixture_name, file_type="json")
